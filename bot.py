#!/usr/bin/env python
# -*- coding: utf-8 -*-
import asyncio
from datetime import *
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, KeyboardButton, ReplyKeyboardMarkup
import aioschedule
import config
from aiogram import Bot, Dispatcher, executor, types
import functions

bot = Bot(token=config.TOKEN)
dp = Dispatcher(bot)

chosenNum = -1
gotQuestion = []

users = functions.updateUsers()
print(users)

theText = ""

blacklist = []
reactionEnabled = False


@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(KeyboardButton(text="‚úçÔ∏è –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"))
    keyboard.add(KeyboardButton(text="‚ùå –û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏"))
    keyboard.add(KeyboardButton(text="üôã‚Äç‚ôÇÔ∏è–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å"))
    keyboard.add(KeyboardButton(text="‚ÑπÔ∏è–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã"))
    await message.answer("–ü—Ä–∏–≤–µ—Ç, –≤–æ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥: ", reply_markup=keyboard)
    return


@dp.message_handler(commands=['update'])
async def updateData(message: types.Message):
    global users
    if message.from_user.id == 347821020 and message.chat.type == 'private':
        users = functions.updateUsers()
        await message.answer("Updated!")
    else:
        await message.reply("–§—É–Ω–∫—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –±–µ—Å–µ–¥–µ –ª–∏–±–æ —É –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!")


@dp.message_handler(text=["üôã‚Äç‚ôÇÔ∏è–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å"])
async def question(message: types.Message):
    functions.setStatus(message.from_user.id, "question")
    await message.reply("–ù–∞–ø–∏—à–∏—Ç–µ –í–∞—à –≤–æ–ø—Ä–æ—Å –ª–∏–±–æ –æ—Ç–º–µ–Ω–∏—Ç–µ —Å–≤–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ /cancel")
    return


@dp.message_handler(commands=['questions', '–ó–∞–¥–∞–Ω–Ω—ã–µ_–≤–æ–ø—Ä–æ—Å—ã'])
async def questions(message: types.Message):
    if message.from_user.id == 347821020 and message.chat.type == 'private':
        await message.answer("–í–æ–ø—Ä–æ—Å—ã –±–µ–∑ –æ—Ç–≤–µ—Ç–∞ /notAnswered\n"
                             "–í—Å–µ –≤–æ–ø—Ä–æ—Å—ã /allQuestions")
    else:
        await message.reply("–§—É–Ω–∫—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –±–µ—Å–µ–¥–µ –ª–∏–±–æ —É –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!")
    return


@dp.message_handler(commands=['makeInteresting', '–ü–æ–º–µ—Å—Ç–∏—Ç—å_–≤_–∞–∫—Ç—É–∞–ª—å–Ω—ã–µ'])
async def makeInteresting(message: types.Message):
    if message.from_user.id == 347821020 and message.chat.type == 'private':
        questions = functions.getAnswered()
        s = "–û—Ç–≤–µ—á–µ–Ω–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã:\n "
        for question in questions:
            s += str(question[4]) + ". " + question[0] + "\n"

        await message.answer(s)
        await message.answer(
            "–í–≤–µ–¥–∏—Ç–µ id –≤–æ–ø—Ä–æ—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–º–µ—Å—Ç–∏—Ç—å –≤ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é. –ù–∞–ø—Ä–∏–º–µ—Ä (1, 2, 3..)")
        functions.setStatus(message.from_user.id, "makeInteresting")
    else:
        await message.reply("–§—É–Ω–∫—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –±–µ—Å–µ–¥–µ –ª–∏–±–æ —É –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!")
    return


@dp.message_handler(commands=['removeInteresting', '–£–¥–∞–ª–∏—Ç—å_–∏–∑_–∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö'])
async def removeInteresting(message: types.Message):
    if message.from_user.id == 347821020 and message.chat.type == 'private':
        questions = functions.getInteresting()
        s = "–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã:\n"
        for question in questions:
            s += str(question[4]) + ". " + question[0] + "\n"

        await message.answer(s)
        await message.answer(
            "–í–≤–µ–¥–∏—Ç–µ id –≤–æ–ø—Ä–æ—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∏—Ö –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é. –ù–∞–ø—Ä–∏–º–µ—Ä (1, 2, 3..)")
        functions.setStatus(message.from_user.id, "removeInteresting")
    else:
        await message.reply("–§—É–Ω–∫—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –±–µ—Å–µ–¥–µ –ª–∏–±–æ —É –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!")
    return


@dp.message_handler(commands=['notAnswered'])
async def notAnswered(message: types.Message):
    if message.from_user.id == 347821020 and message.chat.type == 'private':
        questions = functions.getNotAnswered()
        await message.answer("–í–≤–µ–¥–∏—Ç–µ id –≤–æ–ø—Ä–æ—Å–∞ —á—Ç–æ–±—ã –æ—Ç–≤–µ—Ç–∏—Ç—å, –ª–∏–±–æ /cancel")
        s = ""
        for question in questions:
            s += str(question[4]) + ". " + question[0] + "\n"
        await message.answer(s)
        functions.setStatus(message.from_user.id, "questionNum")
    else:
        await message.reply("–§—É–Ω–∫—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –±–µ—Å–µ–¥–µ –ª–∏–±–æ —É –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!")
    return


@dp.message_handler(commands=['allQuestions'])
async def allQuestions(message: types.Message):
    if message.from_user.id == 347821020 and message.chat.type == 'private':
        questions = functions.getQuestions()
        await message.answer("–í–≤–µ–¥–∏—Ç–µ id –≤–æ–ø—Ä–æ—Å–∞ —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å, –ª–∏–±–æ /cancel")
        s = ""
        for question in questions:
            s += str(question[4]) + ". " + question[0] + " :" + question[1] + "\n"
        await message.answer(s)
        functions.setStatus(message.from_user.id, "questionNum")
    else:
        await message.reply("–§—É–Ω–∫—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –±–µ—Å–µ–¥–µ –ª–∏–±–æ —É –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!")
    return


@dp.message_handler(commands=['changeQuestion'])
async def changeQuestion(message: types.Message):
    if (functions.getStatus(message.from_user.id))[0] == 'gotQuestionNum':
        await message.reply("–í–≤–µ–¥–∏—Ç–µ –≤–æ–ø—Ä–æ—Å!")
        functions.setStatus(message.from_user.id, "setNewQuestion")
        return


@dp.message_handler(commands=['sendAnswer'])
async def changeQuestion(message: types.Message):
    if (functions.getStatus(message.from_user.id))[0] == 'gotQuestionNum':
        await message.reply("–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç:")
        functions.setStatus(message.from_user.id, "setAnswer")
        return


@dp.message_handler(commands=['answers'])
async def answers(message: types.Message):
    await message.answer("–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã - /interesting\n"
                         "–í–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã - /myQuestions")
    return


@dp.message_handler(text=["‚ÑπÔ∏è–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã"])
async def actualQuestions(message: types.Message):
    questions = functions.getInteresting()
    s = "–ê–ö–¢–£–ê–õ–¨–ù–´–ï –í–û–ü–†–û–°–´:\n"
    for question in questions:
        s += "---------------------------\n" \
             "–í–æ–ø—Ä–æ—Å –Ω–æ–º–µ—Ä " + str(question[4]) + ":\n" \
                                                  "–í–æ–ø—Ä–æ—Å: " + question[0] + "\n" \
                                                                             "–û—Ç–≤–µ—Ç: " + question[1] + "\n"
    await message.answer(s)
    return


@dp.message_handler(commands=['myQuestions'])
async def myQuestions(message: types.Message):
    questions = functions.getMyQuestions(message.from_user.id)

    s = "–ú–û–ò –í–û–ü–†–û–°–´:\n"
    for question in questions:
        s += "--------------------------------\n" \
             "–í–æ–ø—Ä–æ—Å –Ω–æ–º–µ—Ä " + str(question[4]) + ":\n" \
                                                  "–í–æ–ø—Ä–æ—Å: " + question[0] + "\n" \
                                                                             "–û—Ç–≤–µ—Ç: " + question[1] + "\n"
    await message.answer(s)
    return


@dp.message_handler(text=['‚å®Ô∏è–ö–æ–º–∞–Ω–¥—ã'])
async def help(message: types.Message):
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    keyboard.add(KeyboardButton(text="‚úçÔ∏è –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"))
    keyboard.add(KeyboardButton(text="‚ùå –û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏"))
    keyboard.add(KeyboardButton(text="üôã‚Äç‚ôÇÔ∏è–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å"))
    keyboard.add(KeyboardButton(text="‚ÑπÔ∏è–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã"))
    await bot.send_message(message.from_user.id, "–í–æ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥: ", reply_markup=keyboard)
    return

@dp.message_handler(commands=['disable','enable'])
async def switchReaction(message: types.Message):
    global reactionEnabled
    if message.from_user.id == 347821020:
        msg = message.text.replace("/", '').strip()
        if msg == 'disable':
            reactionEnabled = False
        if msg == 'enable':
            reactionEnabled = True

        return
    else:
        await message.reply("–£ –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!")
    return


@dp.message_handler(commands=['users'])
async def showUsers(message: types.Message):
    if message.from_user.id == 347821020 or message.chat.type == 'private':
        t = ""
        for id in users:
            t += str(id) + " " + users[id] + "\n"
        await message.reply("–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n" + t)
    else:
        await message.reply("–£ –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –ª–∏–±–æ —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –±–µ—Å–µ–¥–µ!")
    return


@dp.message_handler(text=["‚úçÔ∏è –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"])
async def func(message: types.Message):
    user = functions.getUser(message.from_user.id)
    if user is None or user[2] == 'None':
        functions.deleteStudent(message.from_user.id)
        functions.addStudent(message.from_user.id, message.from_user.username, "None")
        await message.answer("–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–µ –∏–º—è –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ(Example: Sugurov Khamza)")
        functions.setStatus(message.from_user.id, "theName")
    else:
        await message.answer("–í—ã —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã!")
    return


@dp.message_handler(text=["‚ùå –û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏"])
async def unsubscribe(message: types.Message):
    user = functions.getUser(message.from_user.id)
    if user is not None:
        functions.deleteStudent(message.from_user.id)
        await message.answer("–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π!")
        await bot.send_message(347821020, message.from_user.username + " –æ—Ç–ø–∏—Å–∞–ª—Å—è –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏!")
    else:
        await message.answer("–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã!")
    return


@dp.message_handler(commands=['admin'])
async def admin(message: types.Message):
    if message.from_user.id == 347821020 and message.chat.type == 'private':
        keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(KeyboardButton(text="–†–∞—Å—Å—ã–ª–∫–∞ –¥–ª—è –≤—Å–µ—Ö"))
        keyboard.add(KeyboardButton(text="–†–∞—Å—Å—ã–ª–∫–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö –ª—é–¥–µ–π"))
        keyboard.add(KeyboardButton(text="/–ó–∞–¥–∞–Ω–Ω—ã–µ_–≤–æ–ø—Ä–æ—Å—ã"))
        keyboard.add(KeyboardButton(text="/–ü–æ–º–µ—Å—Ç–∏—Ç—å_–≤_–∞–∫—Ç—É–∞–ª—å–Ω—ã–µ"))
        keyboard.add(KeyboardButton(text="/–£–¥–∞–ª–∏—Ç—å_–∏–∑_–∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö"))
        keyboard.add(KeyboardButton(text="/users"))
        keyboard.add(KeyboardButton(text="/update"))
        keyboard.add(KeyboardButton(text="/remove_from_bd"))
        await message.answer("–ü—Ä–∏–≤–µ—Ç, –•–∞–º–∑–µ–∫–µ, –≤–æ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏", reply_markup=keyboard)
    else:
        await message.reply("–§—É–Ω–∫—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –±–µ—Å–µ–¥–µ –ª–∏–±–æ —É –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!")
    return

@dp.message_handler(commands=["remove_from_bd"])
async def removeFromBd(message: types.Message):
    if message.from_user.id == 347821020 and message.chat.type == 'private':
        functions.setStatus(347821020,"removeFromBd")
        s = ""
        c = 1
        for u in functions.data:
            s += str(c) + ". " + u[1] + "\n"
            c += 1
        await message.reply("–í–≤–µ–¥–∏—Ç–µ ID –ª—é–¥–µ–π —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é —Å –ø—Ä–æ–±–µ–ª–æ–º:\n" + s)
    else:
        await message.reply("–§—É–Ω–∫—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –±–µ—Å–µ–¥–µ –ª–∏–±–æ —É –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!")
    return


@dp.message_handler(text=["–†–∞—Å—Å—ã–ª–∫–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö –ª—é–¥–µ–π"])
async def msgs(message: types.Message):
    if message.from_user.id == 347821020 and message.chat.type == 'private':
        await bot.send_message(347821020, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ç–µ–∫—Å—Ç:")
        functions.setStatus(message.from_user.id, "gotMsg")
    else:
        await message.reply("–§—É–Ω–∫—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –±–µ—Å–µ–¥–µ –ª–∏–±–æ —É –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!")
    return


@dp.message_handler(text=["–†–∞—Å—Å—ã–ª–∫–∞ –¥–ª—è –≤—Å–µ—Ö"])
async def forAllMsg(message: types.Message):
    if message.from_user.id == 347821020 and message.chat.type == 'private':
        await bot.send_message(347821020, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ç–µ–∫—Å—Ç:")
        functions.setStatus(message.from_user.id, "gotMsgForAll")
    else:
        await message.reply("–§—É–Ω–∫—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –±–µ—Å–µ–¥–µ –ª–∏–±–æ —É –í–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!")
    return


@dp.message_handler(commands=["cancel"])
async def cancel(message: types.Message):
    functions.setStatus(message.from_user.id, "None")

    await message.reply("–ó–∞–¥–∞—á–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞")
    return

@dp.message_handler(commands=["birthday"])
async def birthday(message: types.Message):
    userData = functions.getUser(message.from_user.id)
    if userData[3]!=None:
        await message.reply(f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {userData[2]}, "
                            f"–í—ã —É–∂–µ –≤–Ω–µ—Å–ª–∏ —Å–≤–æ–π –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è ({userData[3]}) –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö! "
                            f"–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –µ–µ, –Ω–∞–ø–∏—à–∏—Ç–µ @yeapit")
    else:
        await message.reply("–£–∫–∞–∂–∏—Ç–µ –í–∞—à—É –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –¥–µ–Ω—å/–º–µ—Å—è—Ü/–≥–æ–¥ (7/3/2000 : 7 –º–∞—Ä—Ç–∞ 2000 –≥–æ–¥–∞)")
        functions.setStatus(message.from_user.id, "birthday")
    return


@dp.message_handler()
async def getMsg(msg: types.Message):
    global users
    global theText
    global chosenNum
    global gotQuestion
    functions.rollBack()
    status = functions.getStatus(msg.from_user.id)
    print(status)
    if msg.text.lower() == "–æ—Ç–º–µ–Ω–∞":
        await msg.reply("–ó–∞–¥–∞—á–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞")
        functions.setStatus(msg.from_user.id, "None")
        return
    if status[0] == 'question':
        functions.addQuestion(msg.from_user.id, msg.text)
        await bot.send_message(347821020, "–ó–∞–¥–∞–Ω –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å, —á—Ç–æ–±—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å /questions")
        await msg.reply("–í–æ–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω, –æ–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç!")
        functions.setStatus(msg.from_user.id, "None")
        return

    if msg.text == "+":
        if reactionEnabled:
            await msg.reply("–ü—Ä–∏–Ω—è—Ç–æ!")
            await bot.send_message(347821020, msg.from_user.username + " —Å–æ–≥–ª–∞—Å–∏–ª—Å—è!")
        return
    #if msg.text.lower() == "–±–æ—Ç":
    #    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    #    keyboard.add(KeyboardButton(text="‚å®Ô∏è–ö–æ–º–∞–Ω–¥—ã"))
    #    keyboard.add(KeyboardButton(text="‚ÑπÔ∏è–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã"))
    #    await msg.reply("–ß—Ç–æ –í–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?", reply_markup=keyboard)
    #    return
    if msg.text == "-":
        if reactionEnabled:
            await msg.reply("–ü—Ä–∏–Ω—è—Ç–æ!")
            await bot.send_message(347821020, msg.from_user.username + " –æ—Ç–∫–∞–∑–∞–ª—Å—è –æ—Ç —É—á–∞—Å—Ç–∏—è!")
        return
    if status[0] == 'theName':
        name = msg.text
        try:
            functions.updateStudent(msg.from_user.id, name)
            string = msg.from_user.username + " —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ –í–∞—à–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è! –ï–≥–æ ID: " + str(
                msg.from_user.id)
            await bot.send_message(347821020, string)
            await msg.answer("–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è!\n"
                             "–ü–æ –∂–µ–ª–∞–Ω–∏—é –í—ã –º–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å –í–∞—à—É –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è /birthday")
        except:
            await msg.answer("–ß—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫")

        functions.setStatus(msg.from_user.id, "None")
        return
    if status[0] == 'birthday':
        functions.setStatus(msg.from_user.id, "None")
        dateString = msg.text
        dateFormatter = "%d/%m/%Y"
        birthday_date = datetime.strptime(dateString, dateFormatter)
        functions.setUserBirthday(msg.from_user.id, birthday_date)
        await bot.send_message(msg.from_user.id, str(birthday_date)+"- –í–∞—à–∞ –¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è! –ï—Å–ª–∏ –Ω–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–ª–∏ - "
                                                                    "/birthday")
        return


    if msg.chat.type == 'private':
        if msg.from_user.id == 347821020:
            if status[0] == 'gotMsg':
                theText = msg.text
                functions.setStatus(msg.from_user.id, 'None')
                s = ""
                c = 1
                for u in functions.data:
                    s += str(c) + ". " + u[1] + "\n"
                    c += 1
                await bot.send_message(347821020, "–í–≤–µ–¥–∏—Ç–µ ID –ª—é–¥–µ–π —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é —Å –ø—Ä–æ–±–µ–ª–æ–º:\n" + s)
                functions.setStatus(msg.from_user.id, 'forNA')
                return
            if status[0] == 'removeFromBd':
                ids = msg.text.split(', ')
                for id in ids:
                    await msg.reply("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å " + str(functions.getUser(functions.data[int(id) - 1][0])) + " —É–¥–∞–ª—ë–Ω –∏–∑ –ø–æ–¥–ø–∏—Å–æ–∫!")
                    await bot.send_message(functions.data[int(id) - 1][0],"–í—ã —É–¥–∞–ª–µ–Ω—ã –∏–∑ –ø–æ–¥–ø–∏—Å–æ–∫!")
                    functions.deleteUser(functions.data[int(id) - 1][0])

                functions.setStatus(msg.from_user.id, "None")
                return

            if status[0] == 'forNA':
                ids = msg.text.split(', ')
                for id in ids:
                    await bot.send_message(functions.data[int(id) - 1][0], theText)
                functions.setStatus(msg.from_user.id, "None")
                return
            if status[0] == 'gotMsgForAll':
                theText = msg.text
                functions.setStatus(msg.from_user.id, "None")
                for user in functions.data:
                    await bot.send_message(user[0], theText)
                return
            if status[0] == 'questionNum':
                functions.setStatus(msg.from_user.id, "None")
                gotQuestion = functions.getQuestion(int(msg.text))
                await msg.answer("–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –≤–æ–ø—Ä–æ—Å, —Ç–æ /changeQuestion\n"
                                 "–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å /sendAnswer")
                functions.setStatus(msg.from_user.id, "gotQuestionNum")
                return
            if status[0] == 'setAnswer':
                functions.setStatus(msg.from_user.id, "None")
                functions.setAnswer(gotQuestion[4], msg.text)
                await msg.reply("–û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
                await bot.send_message(gotQuestion[3], "–í—ã –ø–æ–ª—É—á–∏–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Ö —Ç—É—Ç "
                                                       "/answers")

                return
            if status[0] == 'setNewQuestion':
                functions.setStatus(msg.from_user.id, "None")
                functions.setQuestion(gotQuestion[4], msg.text)
                await msg.reply("–í–æ–ø—Ä–æ—Å –∏–∑–º–µ–Ω–µ–Ω!")
                await bot.send_message(gotQuestion[3], "–í–∞—à –≤–æ–ø—Ä–æ—Å –±—ã–ª –∏–∑–º–µ–Ω–µ–Ω —Å—Ç–∞—Ä–æ—Å—Ç–æ–π! \n"
                                                       "–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø—Ä–∏—á–∏–Ω—É, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ @yeapit")
                return
            if status[0] == 'makeInteresting':
                functions.setStatus(msg.from_user.id, "None")
                ids = msg.text.split(', ')
                for id in ids:
                    functions.setInteresting(id)
                await msg.reply("–í–æ–ø—Ä–æ—Å—ã –ø–µ—Ä–µ–º–µ—â–µ–Ω—ã –≤–æ –≤–∫–ª–∞–¥–∫—É –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ!")
                return
            if status[0] == 'removeInteresting':
                functions.setStatus(msg.from_user.id, "None")
                ids = msg.text.split(', ')
                for id in ids:
                    functions.removeInteresting(id)
                await msg.reply("–í–æ–ø—Ä–æ—Å—ã —É–¥–∞–ª–µ–Ω—ã —Å–æ –≤–∫–ª–∞–¥–∫–∏ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö!")
                return

        keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.add(KeyboardButton(text="‚úçÔ∏è –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"))
        keyboard.add(KeyboardButton(text="‚ùå –û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏"))
        keyboard.add(KeyboardButton(text="üôã‚Äç‚ôÇÔ∏è–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å"))
        keyboard.add(KeyboardButton(text="‚ÑπÔ∏è–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã"))
        await bot.send_message(msg.from_user.id, "–ü—Ä–∏–≤–µ—Ç, –Ω–µ –ø–∏—à–∏ –º–Ω–µ –±–µ–∑ –ø—Ä–∏—á–∏–Ω—ã! –í–æ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã: ", reply_markup=keyboard)

    return


async def birthdayNotification():
    global users
    while True:
        await aioschedule.run_pending()
        await asyncio.sleep(1)
        if datetime.now().hour == 18 and datetime.now().minute == 0 and datetime.now().second==0:
            for userId, name in users.items():
                if functions.getBirthdayUsers(userId)<=5 and functions.getBirthdayUsers(userId)>=1 :
                    for u in users.keys():
                        if u!=userId:
                            await bot.send_message(u, f"–£ {name} –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è —á–µ—Ä–µ–∑ –Ω–µ–¥–µ–ª—é ({(functions.getUser(userId))[3]}). "
                                                         f"–í —Å–≤—è–∑–∏ —Å —ç—Ç–∏–º —Å–æ–±—ã—Ç–∏–µ–º –æ—Ç–∫—Ä—ã—Ç —Å–±–æ—Ä –Ω–∞ –∫–∞—Å–ø–∏ 87760156299 (1–∫+)")
                elif functions.getBirthdayUsers(userId)==7:
                    for u in users.keys():
                        if u!=userId:
                            await bot.send_message(u, f"–£ {name} –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è —á–µ—Ä–µ–∑ –Ω–µ–¥–µ–ª—é ({(functions.getUser(userId))[3]}). "
                                                         f"–í —Å–≤—è–∑–∏ —Å —ç—Ç–∏–º —Å–æ–±—ã—Ç–∏–µ–º –æ—Ç–∫—Ä—ã–≤–∞—é —Å–±–æ—Ä –Ω–∞ –∫–∞—Å–ø–∏ 87760156299 (1–∫+)")
                elif functions.getBirthdayUsers(userId)==30 or functions.getBirthdayUsers(userId)==31:
                    for u in users.keys():
                        if u!=userId:
                            await bot.send_message(u, f"–£ {name} –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è —á–µ—Ä–µ–∑ –º–µ—Å—è—Ü ({(functions.getUser(userId))[3]}). "
                                                         f"–í —Å–≤—è–∑–∏ —Å —ç—Ç–∏–º —Å–æ–±—ã—Ç–∏–µ–º –ø—Ä–æ—à—É –í–∞—Å –æ—Ç–ª–æ–∂–∏—Ç—å –∫–∞–∫ –º–∏–Ω–∏–º—É–º 1–∫ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –º–µ—Å—è—Ü!")


async def on_startup(_):
    asyncio.create_task(birthdayNotification())


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True, on_startup=on_startup)
